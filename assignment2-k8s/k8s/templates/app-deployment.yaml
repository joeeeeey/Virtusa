apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-crud
  namespace: {{ .Values.appNamespace }}
  labels:
    app: nodejs-crud
spec:
  replicas: {{ .Values.nodeApp.replicas }}
  selector:
    matchLabels:
      app: nodejs-crud
  template:
    metadata:
      labels:
        app: nodejs-crud
    spec:
      containers:
      - name: nodejs-crud
        image: "{{ .Values.nodeApp.image }}:{{ .Values.nodeApp.tag }}"
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_HOST
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_USER
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DB_NAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret-ref
              key: MYSQL_ROOT_PASSWORD
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: {{ .Values.nodeApp.resources.requests.cpu }}
            memory: {{ .Values.nodeApp.resources.requests.memory }}
          limits:
            cpu: {{ .Values.nodeApp.resources.limits.cpu }}
            memory: {{ .Values.nodeApp.resources.limits.memory }}
        livenessProbe:
          httpGet:
            path: "/"
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: "/"
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: nodejs-crud
  namespace: {{ .Values.appNamespace }}
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: nodejs-crud 